{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/Binary_Search/",
    "result": {"data":{"cur":{"id":"d36cb294-72eb-587a-a77a-dab897c6b44b","html":"<ul>\n<li>\n<p>순차 탐색 (Sequential Search): 리스트 안에 특정한 데이터를 찾기 위해 <strong>앞에서부터 데이터를 하나씩 확인</strong>하는 방법</p>\n</li>\n<li>\n<p>이진 탐색 (Binary Search): 정렬되어 있는 리스트에서 <strong>탐색 범위를 절반씩 좁혀가며 데이터를 탐색</strong>하는 방법</p>\n<ul>\n<li>이진 탐색은 시작점, 끝점, 중간점을 이용하여 탐색 범위를 설정함</li>\n</ul>\n</li>\n<li>\n<p>시간 복잡도: O(logN) -> 단계마다 탐색 범위를 2로 나누는 것과 동일(탐색 범위를 절반씩 줄임)함므로 연산 횟수는 logN에 비례</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 재귀적 구현</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">binary_search_recursive</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> start <span class=\"token operator\">></span> end<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span>\n    <span class=\"token builtin\">min</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start<span class=\"token operator\">+</span>end<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n    <span class=\"token comment\"># 찾은 경우 중간점 인덱스 반환</span>\n    <span class=\"token keyword\">if</span> array<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> target<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> mid\n    <span class=\"token comment\"># 중간점의 값보다 찾고자 하는 값이 작은 경우 왼쪽 확인</span>\n    <span class=\"token keyword\">elif</span> array<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> target<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> binary_search_recursive<span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> mid<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 중간점의 값보다 찾고자 하는 값이 큰 경우 오른쪽 확인</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> binary_search_recursive<span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span>\n\nn<span class=\"token punctuation\">,</span> target <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span>\narray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span>\n\nresult <span class=\"token operator\">=</span> binary_search<span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> result <span class=\"token operator\">==</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There is not \"</span> <span class=\"token operator\">+</span> target<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 반복문 구현</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">binary_search_iter</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> start <span class=\"token operator\">&lt;=</span> end<span class=\"token punctuation\">:</span>\n        mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start<span class=\"token operator\">+</span>end<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n        <span class=\"token comment\"># 찾은 경우 중간점 인덱스 반환</span>\n        <span class=\"token keyword\">if</span> array<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> target<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> mid\n        <span class=\"token comment\"># 중간점의 값보다 찾고자 하는 갑싱 작은 경우 왼쪽 확인</span>\n        <span class=\"token keyword\">elif</span> array<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> target<span class=\"token punctuation\">:</span>\n            end <span class=\"token operator\">=</span> mid<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        <span class=\"token comment\"># 중간점의 값보다 찾고자 하는 값이 큰 경우 오른쪽 확인</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            start <span class=\"token operator\">=</span> mid<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span>\n\nn<span class=\"token punctuation\">,</span> target <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span>\narray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span>\n\nresult <span class=\"token operator\">=</span> binary_search<span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> result <span class=\"token operator\">==</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"There is not \"</span> <span class=\"token operator\">+</span> target<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>파이썬 이진 탐색 라이브러리\n<ul>\n<li><code class=\"language-text\">from bisect import bisect_left, bisect_right</code>\n<ul>\n<li><code class=\"language-text\">bisect_left(a, x)</code>: 정렬된 순서를 유지하면서 배열 <code class=\"language-text\">a</code>에 <code class=\"language-text\">x</code>를 삽입할 가장 왼쪽 인덱스 반환</li>\n<li><code class=\"language-text\">bisect_right(a, x)</code>: 정렬된 순서를 유지하면서 배열 <code class=\"language-text\">a</code>에 <code class=\"language-text\">x</code>를 삽입할 가장 오른쪽 인덱스 반환</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> bisect <span class=\"token keyword\">import</span> left_bisect<span class=\"token punctuation\">,</span> right_bisect\n\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\nx <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>bisect_left<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>bisect_right<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 4</span></code></pre></div>\n<ul>\n<li>값이 특정 범위에 속하는 데이터 개수 구하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> bisect <span class=\"token keyword\">import</span> bisect_right<span class=\"token punctuation\">,</span> bisect_left\n\n<span class=\"token comment\"># 값이 [left_value, right_value]인 데이터의 개수를 반환하는 함수</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">count_by_range</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> left_value<span class=\"token punctuation\">,</span> right_value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    right_index <span class=\"token operator\">=</span> bisect_right<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> right_value<span class=\"token punctuation\">)</span>\n    left_index <span class=\"token operator\">=</span> bisect_list<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> left_value<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> right_index <span class=\"token operator\">-</span> left_index\n\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count_by_range<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count_by_range<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 6</span></code></pre></div>\n<ul>\n<li>파라메트릭 서치 (Parametric Search)\n<ul>\n<li><strong>최적화 문제를 결정 문제 (yes or no)로 바꾸어 해결</strong>하는 기법\n<ul>\n<li>e.g, 특정한 조건을 만족하는 가장 알맞은 값을 빠르게 찾는 최적화 문제</li>\n</ul>\n</li>\n<li>일반적으로 코딩 테스트에서 파라메트릭 서치 문제는 이진 탐색을 이용하여 해결할 수 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li><a href=\"http://www.yes24.com/Product/Goods/91433923\">나동빈. (2021). 이것이 취업을 위한 코딩 테스트다</a></li>\n</ul>\n<script src=\"https://utteranc.es/client.js\"\n        repo=\"sominsong/sominsong.github.io\"\n        issue-term=\"pathname\"\n        label=\"Comment\"\n        theme=\"github-light\"\n        crossorigin=\"anonymous\"\n        async>\n</script>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#reference\">Reference</a></li>\n</ul>\n</div>","excerpt":"순차 탐색 (Sequential Search): 리스트 안에 특정한 데이터를 찾기 위해 앞에서부터 데이터를 하나씩 확인하는 방법 이진 탐색 (Binary Search): 정렬되어 있는 리스트에서 탐색 범위를 절반씩 좁혀가며 데이터를 탐색하는 방법 이진 탐색은 시작점, 끝점, 중간점을 이용하여 탐색 범위를 설정함 시간 복잡도: O(logN) -> 단계마다 탐색 범위를 2로 나누는 것과 동일(탐색 범위를 절반씩 줄임)함므로 연산 횟수는 logN에 비례 파이썬 이진 탐색 라이브러리  : 정렬된 순서를 유지하면서 배열 에 를 삽입할 가장 왼쪽 인덱스 반환 : 정렬된 순서를 유지하면서 배열 에 를 삽입할 가장 오른쪽 인덱스 반환 값이 특정 범위에 속하는 데이터 개수 구하기 파라메트릭 서치 (Parametric Search) 최적화 문제를 결정 문제 (yes or no)로 바꾸어 해결하는 기법 e.g, 특정한 조건을 만족하는 가장 알맞은 값을 빠르게 찾는 최적화 문제 일반적으로 코딩 테스트에…","frontmatter":{"date":"November 05, 2022","title":"Binary Search 알고리즘 정리","categories":"Algorithm","author":"Mini","emoji":"🧩"},"fields":{"slug":"/Binary_Search/"}},"next":{"id":"3b8f4d3c-7082-57af-9d31-0365a80f4b3c","html":"<ul>\n<li>정렬: 데이터를 틁정한 기준에 따라 순서대로 나열하는 것</li>\n<li>일반적으로 문제 상황에 따라 적절한 정렬 알고리즘이 공식처럼 사용됨</li>\n</ul>\n<h2 id=\"0-정렬-알고리즘-비교하기\" style=\"position:relative;\"><a href=\"#0-%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B9%84%EA%B5%90%ED%95%98%EA%B8%B0\" aria-label=\"0 정렬 알고리즘 비교하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. 정렬 알고리즘 비교하기</h2>\n<table>\n<thead>\n<tr>\n<th><strong>정렬 알고리즘</strong></th>\n<th><strong>평균 시간 복잡도</strong></th>\n<th><strong>공간 복잡도</strong></th>\n<th><strong>특징</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Selection Sort</td>\n<td>O(N^2)</td>\n<td>O(N)</td>\n<td>아이디어 매우 간단</td>\n</tr>\n<tr>\n<td>Insertion Sort</td>\n<td>O(N^2)</td>\n<td>O(N)</td>\n<td>데이터가 거의 정렬되어 있을 때, 가장 빠름</td>\n</tr>\n<tr>\n<td>Quick Sort</td>\n<td>O(NlogN)</td>\n<td>O(N)</td>\n<td>대부분의 경우 가장 적합, 충분히 빠름</td>\n</tr>\n<tr>\n<td>Counting Sort</td>\n<td>O(N+K)</td>\n<td>O(N+K)</td>\n<td>데이터의 크기가 한정되어 있는 경우에만 사용 가능, 매우 빠름</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"1-선택-정렬-selection-sort\" style=\"position:relative;\"><a href=\"#1-%EC%84%A0%ED%83%9D-%EC%A0%95%EB%A0%AC-selection-sort\" aria-label=\"1 선택 정렬 selection sort permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 선택 정렬 (Selection Sort)</h2>\n<ul>\n<li>처리되지 않은 데이터 중에서 가장 작은 데이터를 선택해 맨 앞에 있는 데이터와 바꾸는 것을 반복</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    min_index <span class=\"token operator\">=</span> i <span class=\"token comment\"># 가장 작은 원소의 인덱스</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> array<span class=\"token punctuation\">[</span>min_index<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            min_index <span class=\"token operator\">=</span> j\n    array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>min_index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>min_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token comment\"># swap</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>시간 복잡도: N번만큼 가장 작은 수를 찾아서 맨 앞으로 보내야 한다\n<ul>\n<li>전체 연산 횟수: 등차수열 N + (N-1) + (N-2) + … + 2 => (N^2 + N -2)/2 => O(N^2)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-삽입-정렬-insertion-sort\" style=\"position:relative;\"><a href=\"#2-%EC%82%BD%EC%9E%85-%EC%A0%95%EB%A0%AC-insertion-sort\" aria-label=\"2 삽입 정렬 insertion sort permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 삽입 정렬 (Insertion Sort)</h2>\n<ul>\n<li>처리되지 않은 데이터를 하나씩 골라 적절한 위치에 삽입\n<ul>\n<li>앞 쪽에 놓인 데이터는 이미 정렬되어 있다고 가정 -> 뒤 쪽 데이터를 하나씩 봐가며 적절한 위치(왼쪽 or 오른쪽)에 삽입</li>\n</ul>\n</li>\n<li>선택 정렬에 비해 구현 난이도가 높은 편이지만, 일반적으로 더 효율적으로 동작함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 인덱스 i부터 1까지 1씩 감소하며 반복하는 문법</span>\n        <span class=\"token keyword\">if</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 한 칸씩 왼쪽으로 이동</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 자기보다 작은 데이터를 만나면 그 위치에서 멈춤</span>\n            <span class=\"token keyword\">break</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>시간 복잡도: O($N^2$)\n<ul>\n<li>현재 리스트의 데이터가 거의 정렬되어 있는 상태라면 매우 빠르게 동작</li>\n<li>최선의 경우: O(N)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-퀵-정렬-quick-sort\" style=\"position:relative;\"><a href=\"#3-%ED%80%B5-%EC%A0%95%EB%A0%AC-quick-sort\" aria-label=\"3 퀵 정렬 quick sort permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 퀵 정렬 (Quick Sort)</h2>\n<ul>\n<li>기준 데이터를 설정하고 그 기준보다 큰 데이터와 작은 데이터의 위치를 바꾸는 방법</li>\n<li>일반적인 상황에서 가장 많이 사용되는 정렬 알고리즘</li>\n<li>병합 정렬 (Merge Sort)와 더불어 대부분의 프로그래밍 언어의 정렬 라이브러리의 근간이 되는 알고리즘</li>\n<li>가장 기본적인 Quick Sort는 첫 번째 데이터를 기준 데이터(pivot)로 설정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">quick_sort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> start <span class=\"token operator\">>=</span> end<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 원소가 1개인 경우 종료</span>\n        <span class=\"token keyword\">return</span>\n    pivot <span class=\"token operator\">=</span> start <span class=\"token comment\"># pivot은 첫 번째 원소</span>\n    left <span class=\"token operator\">=</span> start <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    right <span class=\"token operator\">=</span> end\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># pivot보다 큰 데이터를 찾을 때까지 반복</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> end <span class=\"token keyword\">and</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> array<span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            left <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token comment\"># pivot보다 작은 데이터를 찾을 때까지 반복</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>right <span class=\"token operator\">></span> start <span class=\"token keyword\">and</span> array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> array<span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            right <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> left <span class=\"token operator\">></span> right<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 엇갈렸다면 작은 데이터와 pivot을 교체</span>\n            array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 엇갈리지 않았다면 작은 데이터와 큰 데이터를 교체</span>\n            arrya<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># 분할 이후 왼쪽 부분과 오른쪽 부분에서 각각 정렬 수행</span>\n    quick_sort<span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> right<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    quick_sort<span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> right<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span>\n\nquick_sort<span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 파이썬의 장점을 살린 방식</span>\narray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">quick_sort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 리스트가 하나 이하의 원소만을 담고 있다면 종료</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> array\n    pivot <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># pivot은 첫 번째 원소</span>\n    tail <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 피벗을 제외한 리스트</span>\n    \n    left_side <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> tail <span class=\"token keyword\">if</span> x <span class=\"token operator\">&lt;=</span> pivot<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 분할된 왼쪽 부분</span>\n    right_side <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> tail <span class=\"token keyword\">if</span> x <span class=\"token operator\">></span> pivot<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 분할된 오른쪽 부분</span>\n\n    <span class=\"token comment\"># 분할 이후 왼쪽 부분과 오른쪽 부분에서 각각 정렬 수행하고, 전체 리스트 반환</span>\n    <span class=\"token keyword\">return</span> quick_sort<span class=\"token punctuation\">(</span>left_side<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> quick_sort<span class=\"token punctuation\">(</span>right_side<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>quick_sort<span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>퀵 정렬이 빠른 이유: 이상적인 경우 분할이 절반씩 일어난다면 전체 연산 횟수로 O(NlogN)을 기대할 수 있음</p>\n<ul>\n<li>너비 x 높이: N x logN = NlogN</li>\n</ul>\n</li>\n<li>\n<p>시간 복잡도</p>\n<ul>\n<li>평균의 경우: O(NlogN)</li>\n<li>최악의 경우: O(N^2) -> 이미 정렬된 배열의 경우 (<code class=\"language-text\">pivot</code> == <code class=\"language-text\">min</code>)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-계수-정렬-counting-sort\" style=\"position:relative;\"><a href=\"#4-%EA%B3%84%EC%88%98-%EC%A0%95%EB%A0%AC-counting-sort\" aria-label=\"4 계수 정렬 counting sort permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 계수 정렬 (Counting Sort)</h2>\n<ul>\n<li>데이터가 몇 번 씩 등장했는지를 Count하는 방식으로 동작하는 정렬 알고리즘\n<ul>\n<li>가장 작은 데이터부터 가장 큰 데이터까지의 범위를 포함할 수 있는 배열 생성 -> <strong>상대적으로 공간 복잡도가 높음</strong></li>\n</ul>\n</li>\n<li>특정한 조건이 부합할 때만 사용할 수 있지만 <strong>매우 빠르게 동작하는</strong> 정렬 알고리즘\n<ul>\n<li>계수 정렬은 데이터의 크기 범위가 제한되어 정수 형태로 표현할 수 있을 때 사용 가능</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 모든 원소의 값이 0보다 크거나 같다고 가정</span>\narray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 모든 범위를 포함하는 리스트 선언(모든 값은 0으로 초기화)</span>\ncount <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    count<span class=\"token punctuation\">[</span>array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>    <span class=\"token comment\"># 각 데이터에 해당하는 인덱스의 값 증가</span>\n \n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 리스트에 기록된 정렬 정보 확인</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 띄어쓰기를 구분으로 등장한 횟수만큼 인덱스 출력</span></code></pre></div>\n<ul>\n<li>시간 복잡도\n<ul>\n<li>데이터의 개수가 N, 데이터(양수) 중 최대값이 K일 때 최악의 경우애도 수행 시간 O(N+K)를 보장 -> <strong>퀵 정렬보다 빠르게 동작</strong></li>\n<li>때에 따라 심각한 비효율성을 초래할 수 있음: 데이터가 0과 999,999로 단 2개만 존재하는 경우</li>\n<li><strong>동일한 값을 가지는 데이터가 여러 개 등장할 때 효과적</strong>으로 사용 가능\n<ul>\n<li>e.g., 성적의 경우 100점을 맞은 학생이 여러 명일 수 있기 때문에 계수 정렬이 효과적</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>공간 복잡도\n<ul>\n<li>O(N+K)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li><a href=\"http://www.yes24.com/Product/Goods/91433923\">나동빈. (2021). 이것이 취업을 위한 코딩 테스트다</a></li>\n</ul>\n<script src=\"https://utteranc.es/client.js\"\n        repo=\"sominsong/sominsong.github.io\"\n        issue-term=\"pathname\"\n        label=\"Comment\"\n        theme=\"github-light\"\n        crossorigin=\"anonymous\"\n        async>\n</script>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#0-%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B9%84%EA%B5%90%ED%95%98%EA%B8%B0\">0. 정렬 알고리즘 비교하기</a></li>\n<li><a href=\"#1-%EC%84%A0%ED%83%9D-%EC%A0%95%EB%A0%AC-selection-sort\">1. 선택 정렬 (Selection Sort)</a></li>\n<li><a href=\"#2-%EC%82%BD%EC%9E%85-%EC%A0%95%EB%A0%AC-insertion-sort\">2. 삽입 정렬 (Insertion Sort)</a></li>\n<li><a href=\"#3-%ED%80%B5-%EC%A0%95%EB%A0%AC-quick-sort\">3. 퀵 정렬 (Quick Sort)</a></li>\n<li><a href=\"#4-%EA%B3%84%EC%88%98-%EC%A0%95%EB%A0%AC-counting-sort\">4. 계수 정렬 (Counting Sort)</a></li>\n<li><a href=\"#reference\">Reference</a></li>\n</ul>\n</div>","frontmatter":{"date":"November 04, 2022","title":"Sorting 알고리즘 정리","categories":"Algorithm","author":"Mini","emoji":"🧩"},"fields":{"slug":"/Sorting/"}},"prev":{"id":"29c46c26-f92c-5cc3-8977-87d9220073c5","html":"<p>졸업 후, 취준을 하며 여느 졸업생(취준생)들과 비슷한 시간을 보내고 있었다.\n그러던 중, 지도 교수님과 논문 관련해서 상담을 하게되었다.</p>\n<p>교수님께서는 미국 박사 유학을 적극 추천해주셨고,\n이제까지는 ‘내 일이 아니다’라며 생각했던 진로에 대해 진지하게 고민해보게 되었다.</p>\n<p>현실적으로 지금은 박사 유학을 위한 준비가 아무것도 되어있지 않다보니,\n내년 가을에 Application을 넣고, 2024년 9월 입학을 고려해야 한다. (28살에 박사 입학)</p>\n<p>그러기 위해선 내년(2023년) 이 맘때쯤 전까지 준비가 완료되어있어야하기 때문에\n어떤 준비가 필요한지에 대해 찾아보고 정리해두려고 한다.</p>\n<h2 id=\"0-국내-해외-대학원-유학-장학금\" style=\"position:relative;\"><a href=\"#0-%EA%B5%AD%EB%82%B4-%ED%95%B4%EC%99%B8-%EB%8C%80%ED%95%99%EC%9B%90-%EC%9C%A0%ED%95%99-%EC%9E%A5%ED%95%99%EA%B8%88\" aria-label=\"0 국내 해외 대학원 유학 장학금 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. 국내 해외 대학원 유학 장학금</h2>\n<ul>\n<li>삼성 이건희 장학금</li>\n<li>관청 이종환 장학금</li>\n<li>국비 유학생 선발 파견 장학금</li>\n<li>한국 고등교육재단 장학금</li>\n</ul>\n<h2 id=\"1-준비해야-할-것\" style=\"position:relative;\"><a href=\"#1-%EC%A4%80%EB%B9%84%ED%95%B4%EC%95%BC-%ED%95%A0-%EA%B2%83\" aria-label=\"1 준비해야 할 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 준비해야 할 것</h2>\n<p>학교마다 다르겠지만, 보통의 학교 입학을 위해 준비해야하는 것들은 아래와 같다.</p>\n<ul>\n<li>\n<p>필수 사항</p>\n<ul>\n<li>학사 학위 / High GPA (최소 3.0/4.0, 3.9 ~ 4.0/4.5)</li>\n<li>GRE / TOEFL (Minimum: 80~100/120)</li>\n<li>Resume = CV\n<ul>\n<li>연구 실적\n<ul>\n<li><strong>영어발표 or 영어로 된 논문 쓴 경험</strong></li>\n<li>국내외 학회 포스터/구두 발표 참여 경험</li>\n<li>논문(학위논문, 학회발표논문, 국외 논문, 학회지논문)</li>\n<li>수상실적(우수발표상 등)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>SOP (Statement of Purpose, 자기소개서)\n<ul>\n<li>저술한 논문의 결론 및 주장, 의견, 이론이 입학에 중요한 영향을 미침</li>\n<li>연구실 생활을 연대기적으로 요약 정리, 기술하여 랩 생활에 대한 김이 있음을 어필해야 함</li>\n</ul>\n</li>\n<li>추천서 (3 ~ 5개)</li>\n</ul>\n</li>\n<li>\n<p>권장 사항</p>\n<ul>\n<li><strong>지원하는 교수님께 지원 프로세스 전에 이메일 보내기</strong></li>\n<li>Writing Sample</li>\n<li>GRE Subject</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-준비-timeline\" style=\"position:relative;\"><a href=\"#2-%EC%A4%80%EB%B9%84-timeline\" aria-label=\"2 준비 timeline permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 준비 Timeline</h2>\n<table>\n<thead>\n<tr>\n<th>시기</th>\n<th>준비해야 할 것</th>\n<th>비고</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2022.11</td>\n<td>프로그램 Search</td>\n<td>1~2개월 소요, 엑셀에 정리</td>\n</tr>\n<tr>\n<td>2022.11</td>\n<td>영어 Speaking 공부 시작</td>\n<td>1~2개월 소요, 엑셀에 정리</td>\n</tr>\n<tr>\n<td>2022.03</td>\n<td>GRE 준비</td>\n<td>4개월 소요, 7월 시험 (2~4회/달, 결과 10일 내 발표)</td>\n</tr>\n<tr>\n<td>2023.03</td>\n<td>TOEFL 준비</td>\n<td>3개월 소요, 6월 시험 (6회/달, 결과 4~5일 내 발표 )</td>\n</tr>\n<tr>\n<td>2023.03</td>\n<td>CV 준비</td>\n<td>1~2주 소요</td>\n</tr>\n<tr>\n<td>2023.03</td>\n<td>SOP 준비</td>\n<td>3개월 소요</td>\n</tr>\n<tr>\n<td>2023.07</td>\n<td>fulbright scholarship program</td>\n<td>3개월 소요</td>\n</tr>\n<tr>\n<td>2023.08</td>\n<td>컨택 메일 보내기</td>\n<td>8월 말 ~ 9월 초</td>\n</tr>\n<tr>\n<td>2023.08</td>\n<td>온라인 원서 오픈 상황 Check</td>\n<td>8월 ~ 9월</td>\n</tr>\n<tr>\n<td>2023.10</td>\n<td>인터뷰 준비 시작</td>\n<td>3개월 소요, 연구 주제 설명</td>\n</tr>\n<tr>\n<td>2023.09-12</td>\n<td>Application</td>\n<td>시험 점수 Reporting 2주 소요</td>\n</tr>\n<tr>\n<td>2023.10-2024.02</td>\n<td>진행 상황 Check</td>\n<td></td>\n</tr>\n<tr>\n<td>2023.12-2024.02</td>\n<td>Interview</td>\n<td></td>\n</tr>\n<tr>\n<td>2024.08</td>\n<td>출국</td>\n<td></td>\n</tr>\n<tr>\n<td>2024.09</td>\n<td>입학</td>\n<td>28살</td>\n</tr>\n<tr>\n<td>2029.09</td>\n<td>박사 졸업</td>\n<td>33살 (5년 소요 예상)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"3-준비-details\" style=\"position:relative;\"><a href=\"#3-%EC%A4%80%EB%B9%84-details\" aria-label=\"3 준비 details permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 준비 Details</h2>\n<ul>\n<li>\n<p>프로그램 Search</p>\n<ul>\n<li><a href=\"https://www.usnews.com/rankings\">https://www.usnews.com/rankings</a></li>\n<li><a href=\"https://www.topuniversities.com/subject-rankings/2022\">https://www.topuniversities.com/subject-rankings/2022</a></li>\n<li>학 학교 해당 학과 페이지의 ‘Research’, ‘Faculty’, ‘Laboratory’, ‘Program’ 참고</li>\n<li>정리해야 할 항목\n<ul>\n<li>마감일, GPA, TOEFL, GRE, 선수과목, 기타 부가 서류 여부, 교수, 관련 연구, 지원료</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>School Selection</p>\n<ul>\n<li>해당 지역의 안정성, 도시 규모, 장학금/생활비, 한인 커뮤니티 규모 기준으로 줄여나감</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<p>유학 준비에 참고할만한 블로그</p>\n<ul>\n<li><a href=\"https://ygsj.tistory.com/10\">https://ygsj.tistory.com/10</a></li>\n</ul>\n<script src=\"https://utteranc.es/client.js\"\n        repo=\"sominsong/sominsong.github.io\"\n        issue-term=\"pathname\"\n        label=\"Comment\"\n        theme=\"github-light\"\n        crossorigin=\"anonymous\"\n        async>\n</script>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#0-%EA%B5%AD%EB%82%B4-%ED%95%B4%EC%99%B8-%EB%8C%80%ED%95%99%EC%9B%90-%EC%9C%A0%ED%95%99-%EC%9E%A5%ED%95%99%EA%B8%88\">0. 국내 해외 대학원 유학 장학금</a></li>\n<li><a href=\"#1-%EC%A4%80%EB%B9%84%ED%95%B4%EC%95%BC-%ED%95%A0-%EA%B2%83\">1. 준비해야 할 것</a></li>\n<li><a href=\"#2-%EC%A4%80%EB%B9%84-timeline\">2. 준비 Timeline</a></li>\n<li><a href=\"#3-%EC%A4%80%EB%B9%84-details\">3. 준비 Details</a></li>\n<li><a href=\"#reference\">Reference</a></li>\n</ul>\n</div>","frontmatter":{"date":"November 06, 2022","title":"미국 박사 유학","categories":"PhD","author":"Mini","emoji":"🧩"},"fields":{"slug":"/PhD in US/"}},"site":{"siteMetadata":{"siteUrl":"https://sominsong.github.io","comments":{"utterances":{"repo":"sominsong/sominsong.github.io"}}}}},"pageContext":{"slug":"/Binary_Search/","nextSlug":"/Sorting/","prevSlug":"/PhD in US/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}