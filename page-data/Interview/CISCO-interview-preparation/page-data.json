{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/Interview/CISCO-interview-preparation/",
    "result": {"data":{"cur":{"id":"4ef79b05-73be-5417-a6c3-8a5c57d1e61f","html":"<p>좋은 기회로 Cisco Research 본사에서 Intership Program Offer를 받았다.</p>\n<p>Resume는 제공한 상태이지만, 앞으로의 프로세스에서 어떻게 인터뷰가 진행될지 자세한 안내가 없었기 때문에 남은 기간동안 무엇을 준비해야 하는지 굉장히 막막했다.\n특히, 외국계 기업인데다가 Research이며, Intership Program이기 때문에 어떻게 인터뷰 과정이 진행되는지 대체 감이 오질 않았다.</p>\n<p>따라서 구글링을 통해 Cisco Interview를 준비하면서 참고하면 좋을만한 것들을 정리해두기로 했다.</p>\n<p>참고로 Offer를 주신 분께서는 Coding Test와 1 시간 가량의 Interview 프로세스가 있을 것이라고 안내해주셨다.</p>\n<p>Cisco 채용 페이지에서 Security 관련 Internship Program을 찾아보니 다음 포지션이 제일 관련도가 높아 보였다: <a href=\"https://jobs.cisco.com/jobs/ProjectDetail/Security-Research-Engineer-Intern-United-States/1382671?source=Cisco+Jobs+Career+Site&#x26;tags=CDC+Browse+all+jobs+careers\">Security Research Engineer (Intern) United States</a></p>\n<h2 id=\"cisco-internship-interview-reference\" style=\"position:relative;\"><a href=\"#cisco-internship-interview-reference\" aria-label=\"cisco internship interview reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cisco Internship Interview Reference</h2>\n<p>GeeksforGeeks에 Cisco Intership 인터뷰 경험이 정리된 많은 게시글들이 있었다.\nCisco Research가 아니라, Cisco의 학부생 Intership 과정인 것 같았지만 적어도 코딩 테스트와 Technical Interview 질문 몇 개는 건질 수 있지 않을까해서 링크를 아래에 정리해 둔다.</p>\n<ul>\n<li><a href=\"https://www.geeksforgeeks.org/cisco-interview-experience-for-internshipfte-on-campus-virtual-2023/?ref=rp\">https://www.geeksforgeeks.org/cisco-interview-experience-for-internshipfte-on-campus-virtual-2023/?ref=rp</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/cisco-interview-experience-for-internship-fy-2023-on-campus-iit-bhu/?ref=rp\">https://www.geeksforgeeks.org/cisco-interview-experience-for-internship-fy-2023-on-campus-iit-bhu/?ref=rp</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/cisco-interview-experience-for-internship-2022-23-on-campus-virtual/?ref=rp\">https://www.geeksforgeeks.org/cisco-interview-experience-for-internship-2022-23-on-campus-virtual/?ref=rp</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/cisco-interview-experience-on-campus-virtual-hiring-for-internship-2020-21/?ref=rp\">https://www.geeksforgeeks.org/cisco-interview-experience-on-campus-virtual-hiring-for-internship-2020-21/?ref=rp</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/cisco-interview-experience-virtual-hiringon-campus-for-internship-2020-21/?ref=rp\">https://www.geeksforgeeks.org/cisco-interview-experience-virtual-hiringon-campus-for-internship-2020-21/?ref=rp</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/cisco-interview-experience-for-software-engineer-6-months-internship/?ref=gcse\">https://www.geeksforgeeks.org/cisco-interview-experience-for-software-engineer-6-months-internship/?ref=gcse</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/cisco-internship-interview-experience-for-network-embedded-application-development/?ref=gcse\">https://www.geeksforgeeks.org/cisco-internship-interview-experience-for-network-embedded-application-development/?ref=gcse</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/cisco-interview-experience-summer-internship-feb-2019/?ref=gcse\">https://www.geeksforgeeks.org/cisco-interview-experience-summer-internship-feb-2019/?ref=gcse</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/cisco-recruitment-on-campus/\">https://www.geeksforgeeks.org/cisco-recruitment-on-campus/</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/cisco-interview-experiencecampus-recruitment/?ref=rp\">https://www.geeksforgeeks.org/cisco-interview-experiencecampus-recruitment/?ref=rp</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/cisco-interview-experience-set-17-1-5-years-experienced/\">https://www.geeksforgeeks.org/cisco-interview-experience-set-17-1-5-years-experienced/</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/cisco-interview-experience-for-internship-2022-23-on-campus-virtual/\">https://www.geeksforgeeks.org/cisco-interview-experience-for-internship-2022-23-on-campus-virtual/</a></li>\n</ul>\n<h2 id=\"online-coding-round\" style=\"position:relative;\"><a href=\"#online-coding-round\" aria-label=\"online coding round permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Online Coding Round</h2>\n<p>두 가지 유형이 출제되는 것 같았다: **코딩 문제(DSA)**와 <strong>MCQs(Multiple Choice Questions)</strong>\n찾아본 자료에 의하면, 2개의 코딩 문제가 출제되며 매년 조금씩 다른 개수의 MCQ가 출제된다고 한다.\n또한, 시간은 두 가지를 합쳐서 1시간 40분 정도라고 한다.\n시간 또한, 조금씩 차이는 나는 것 같았다.</p>\n<p>따라서 전략은 <strong>가장 쉬운 알고리즘 코딩 문제를 먼저 해결하고 -> 가능한 많은 MCQ를 완료한 후 -> 어려운 코딩 문제를 해결</strong> 하는 방법을 추천해주었다.</p>\n<p>두 가지 모두 <a href=\"https://www.hackerrank.com/products/main/\">HackerRank</a> 사이트에서 진행된다고 한다.\n우리나라로 치면 Programmers 같은 느낌이다.</p>\n<p><strong>코딩 문제</strong> 관련해서 출제되는 문제는 GFG 사이트에 잘 정리되어 있었다:</p>\n<p><a href=\"https://practice.geeksforgeeks.org/explore?page=1&#x26;company%5B%5D=Cisco&#x26;sortBy=submissions\">Geek for Geek - Cisco Coding Test</a></p>\n<p>Cisco 인터뷰 후기를 읽어보며 정리한 문제 유형을 다음과 같다.</p>\n<ul>\n<li><a href=\"https://www.geeksforgeeks.org/floyd-warshall-algorithm-dp-16/\">Floyd-Warshall 알고리즘(2022)</a></li>\n<li>Dijkstra 알고리즘(2022)</li>\n<li><a href=\"https://www.geeksforgeeks.org/find-the-number-of-islands-using-dfs/\">DFS + DP 알고리즘(2022)</a></li>\n<li>employees check-in check-out problem(2021)</li>\n<li>(2021) <a href=\"https://www.codechef.com/problems/H1\">https://www.codechef.com/problems/H1</a></li>\n<li>Greedy 알고리즘(2021)</li>\n<li>(2019) <a href=\"https://www.geeksforgeeks.org/maximum-minimum-values-algebraic-expression/\">https://www.geeksforgeeks.org/maximum-minimum-values-algebraic-expression/</a></li>\n</ul>\n<p>Data Structure Algorithm(DSA)을 위주로 준비하기 위한 링크는 아래에 있다</p>\n<ul>\n<li><a href=\"https://velog.io/@swiftist9891/DSA%EA%B3%B5%EB%B6%80%ED%95%98%EA%B8%B0-%EC%9C%A0%EC%9A%A9%ED%95%9C-%EB%A7%81%ED%81%AC%EB%AA%A8%EC%9D%8C\">DSA공부하기-유용한-링크모음</a></li>\n</ul>\n<p><strong>MCQs</strong>는 다음과 같이 출제되었다:\nOS, OOP 및 컴퓨터 네트워킹, 적성 검사</p>\n<p>아래 사이트에서 연습해 볼 수 있다고 한다.</p>\n<ul>\n<li><a href=\"https://www.indiabix.com\">https://www.indiabix.com</a></li>\n</ul>\n<h2 id=\"technical-interview\" style=\"position:relative;\"><a href=\"#technical-interview\" aria-label=\"technical interview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Technical Interview</h2>\n<p>아마 이 과정에서는 두 가지로 나뉠 수 있을 것 같다.\n내가 메일로 보내드린 Resume 관련 질문을 하거나, 이와 무관한 Technical Interview를 진행하거나.</p>\n<p>따라서 Resume 관련한 공부들을 매일 조금씩 정리했고 (<a href=\"https://sominsong.github.io/posts/TIL\">TIL에 정리</a>)\n이와 무관한 Technical Interview 내용들도 숙지해야 한다.</p>\n<p>이건 AWS Interview에서 준비했던 링크들을 참고하면 좋을 것 같아, 이를 참고했다:</p>\n<ul>\n<li><a href=\"https://velog.io/@jeon3029/%EC%BB%B4%ED%93%A8%ED%84%B0-%EA%B3%B5%ED%95%99-CS-%EA%B3%B5%EB%B6%80%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%9C%A0%EC%9A%A9%ED%95%9C-%EB%A7%81%ED%81%AC%EB%8B%A8%EC%88%9C-%EB%A7%81%ED%81%AC-%EB%AA%A8%EC%9D%8C\">IT 기업 면접 준비, 컴퓨터 공학 CS 공부를 위한 유용한 링크(단순 링크 모음)</a></li>\n<li><a href=\"https://github.com/JaeYeopHan/Interview_Question_for_Beginner\">Interview Question for Beginner</a></li>\n</ul>\n<p>아래는 찾아본 자료에서 언급한 여러 인터뷰 Question들을 간략하게 정리해봤다.</p>\n<p>찾아본 자료에 의하면, 3번의 인터뷰 라운드(technical 2번, HR 1번)를 거쳤다고 했다.\n또한, Technical 인터뷰 시간은 50분씩이었고, HR 인터뷰에서는 간략한 자기소개 후에 고용 형태나 업무에 대한 설명을 해주는 시간으로 약 15분 정도가 소요된다고 한다.</p>\n<p>먼저 Technical Interview이든 HR 인터뷰이든 젤 처음에는 무조건 ‘Walk me through your resume’ or ‘Tell me about yourself’ 질문으로 시작한다.\n따라서, 이 부분은 막힘없이 말할 수 있또록 잘 외워두는게 좋겠다.\nCisco 인사 담당자 인터뷰를 참고했는데 3 WHY (Why Cisco? Why this role? Why me?)로 말할 수 있으면 BEST라고 했다.</p>\n<p>Technical Interview에서 물어봤던 기출 질문에 대해서 각 카테고리별로 아래에 정리해두었다 (참고로 밑줄은 빈출 질문이다):</p>\n<ul>\n<li><strong>Personal</strong>\n<ul>\n<li><u>관심 분야가 무엇?</u></li>\n<li>관심사가 무엇인가?</li>\n<li>당신의 열정을 가지는 것은 무엇인가?</li>\n<li>취미, 과외활동</li>\n<li>오늘 인터뷰가 어땠는지? 이전 인터뷰/인터뷰어가 어땠는지?</li>\n<li>나의 강점 및 약점이 무엇인지?</li>\n<li>남 들과의 차별점은 무엇인가?</li>\n<li>부모님/친구/자기 자신은 당신을 한 마디로 뭐라고 표현합니까?</li>\n<li>향후 5년 후의 자신은 어떤 모습입니까?</li>\n<li>향후 연구와 관련된 향후 계획은 무엇인가?</li>\n<li>뽑히면, 어떤 프로젝트를 하고 싶은지</li>\n</ul>\n</li>\n<li><strong>Behavior Question</strong>\n<ul>\n<li><strong>동료와 의견이 다를 때 어떻게 하시겠습니까?</strong></li>\n<li>대회를 준비할 때, 당신은 어떻게 준비해 나갑니까?</li>\n<li>기술적인 프로젝트를 수행하면서 어떤 문제에 직면했는가? 어떻게 해결할 수 있었는가?</li>\n<li>기존 기능을 넘어서는 새로운 기능을 어떻게 bring up하는지?</li>\n<li>어떤 프로젝트가 가장 마음에 들었고, 그 이유는 무엇인가?</li>\n<li>타사 도구를 최대한 활용하고 시스템과 통합하는 방법은 무엇인가?</li>\n<li>자동화한 일이 있는지?</li>\n<li>소프트웨어 솔루션에서 real-life 문제를 발견하고, 해결을 위한 조치를 취한 적이 있는지?</li>\n<li>팀원들과 함께 작업하면서 느꼈던 점은?</li>\n</ul>\n</li>\n<li><strong>Resume</strong>\n<ul>\n<li>이전 업무 경험에 대한 질문</li>\n<li>보유한 기술 스택?\n<ul>\n<li><strong>기술 스택에 대한 심층 질문 (하나의 기술 당 5개의 심층 문제 제시)</strong></li>\n</ul>\n</li>\n<li>이력서 활동이 회사에 어떤 도움이 될 것인지?</li>\n</ul>\n</li>\n<li><strong>Project</strong>\n<ul>\n<li>프로젝트에 대한 설명 요구\n<ul>\n<li>어떤 문제를 해결하고자 했는가, 어떻게 구현했는가, 어떤 결과였는가</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Network</strong>\n<ul>\n<li><strong>Networking 용어 설명</strong></li>\n<li><strong>Network 유형</strong></li>\n<li>P2P 및 Client-Server 네트워크 설명 및 장단점\n<ul>\n<li>실생활에서 P2P의 예</li>\n</ul>\n</li>\n<li>Networking Layering 및 Switching 설명\n<ul>\n<li>구글 크롬에서 작동하는 Layering 패턴</li>\n</ul>\n</li>\n<li><strong>Bridge와 Switch와 Router의 차이점</strong>\n<ul>\n<li><strong>Router의 동작 과정을 간략하게 설명</strong></li>\n<li>경로에 오류가 있는 경우, dynamic routing protocol은 어떻게 경로를 전환하는가?</li>\n</ul>\n</li>\n<li><strong>OSI Reference Model에서 계층들</strong>\n<ul>\n<li><strong>Router와 Switch는 어느 Layer에 위치해 있는지? 이 둘의 차이점은 무엇인지?</strong></li>\n<li>이 외 몇 가지 계층에 대해 어떤 역할을 하는지 설명</li>\n<li>Networking에서 왜 이렇게 다른 Layer가 필요한지?</li>\n<li>물리적 계층에서는 어떤 일이 발생하는지?</li>\n</ul>\n</li>\n<li>IPv4 address에서 클래스 설명</li>\n<li>IPv4와 IPv6의 차이점은?</li>\n<li>Ethernet Cable은 무엇이고, 어떻게 작동하는가?</li>\n<li><strong>TCP/IP 설명</strong>\n<ul>\n<li>TCP의 message에는 어떤 내용이 있는지?</li>\n<li>TCP/IP는 어떻게 작동하는가?</li>\n</ul>\n</li>\n<li><strong>DNS 작동 방식</strong>\n<ul>\n<li><strong>웹 브라우저에 <a href=\"http://www.google.com%EC%9D%84\">www.google.com을</a> 입력할 경우 어떻게 되는지?</strong></li>\n</ul>\n</li>\n<li>ARP(Address Resolution Protocol) 설명</li>\n<li><strong>TCP와 UDP의 차이</strong>\n<ul>\n<li>사용되는 실제 사례</li>\n</ul>\n</li>\n<li>HTTP란 무엇인가?</li>\n<li><strong>Super-Netting과 Sub-Netting이 무엇인가?</strong></li>\n<li>TraceRoute 설명</li>\n<li>ICMP 설명</li>\n<li>IP header</li>\n<li>Sliding Window Protocol 설명</li>\n<li>TTL이란\n<ul>\n<li>TTL의 기본값은?</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>OS</strong>\n<ul>\n<li>‘Operating System’이라는 용어를 일반인에게 설명</li>\n<li>프로젝트에서 사용한 OS\n<ul>\n<li>해당 OS에서 네트워킹 사례</li>\n<li>*해당 OS의 Inter-process 통신 기술</li>\n<li>Message Queue의 작업 설명</li>\n</ul>\n</li>\n<li>Semaphore와 Busy Waiting 설명\n<ul>\n<li>실제 사례를 사용하여 Busy Waiting 설명</li>\n</ul>\n</li>\n<li><strong>Semaphore와 Mutex</strong></li>\n<li><strong>Multi-threading 설명</strong>\n<ul>\n<li>Multi-threading의 장점은 무엇인가?</li>\n</ul>\n</li>\n<li>리눅스에서 실행 중인 프로세스의 PID를 가져오는 프로그램</li>\n<li><strong>스케줄링의 종류</strong></li>\n<li>한가지 프로세스 스케줄링 방법을 다른 스케줄링 방법으로 변환하는 방법</li>\n<li>Queue를 구현하지 위해서 몇 개의 Stack이 필요한가? 구현을 위한 Pseudo-code</li>\n<li>메모리의 유형</li>\n<li>Virtual Memory</li>\n<li>Cache memory와 Main Memory의 차이점</li>\n<li>System Call 설명</li>\n<li>Printf()는 어떻게 작동하는가?</li>\n<li>Deadlock</li>\n<li>Context Switching</li>\n<li>Paging과 Segmentation</li>\n<li>Process 상태와 속성</li>\n<li><strong>Thread</strong>\n<ul>\n<li>Thread 관련 프로그래밍</li>\n</ul>\n</li>\n<li>라이브러리의 유형\n<ul>\n<li>동적 라이브러리를 driver test 프로그램과 연결하는 방법</li>\n</ul>\n</li>\n<li>시스템 간의 Synchronous &#x26; Asynchronous communication 방법</li>\n<li>Recycle bin(휴지통)의 내부 구현</li>\n<li>Atomic Transaction(원자적 트랜잭션) 설명\n<ul>\n<li>트랜잭션이 atomic한지 어떻게 확인할 수 있는가?</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>OOP</strong>\n<ul>\n<li>shallow copy(얕은 복사)와 deep copy(깊은 복사)의 차이점</li>\n<li>copy constructer(복사 생성자)와 copy assignment operator(복사 할당 연산자)의 차이점</li>\n<li>실제 사례를 통한 상속(inheritance) 설명</li>\n<li><strong>The Deadly Diamond of Death Problem(죽음의 다이아몬드 문제) 설명 및 그 해결책 설명</strong></li>\n<li>OOP의 장점 및 단점 설명</li>\n</ul>\n</li>\n<li><strong>DSA</strong>\n<ul>\n<li>가장 좋아하는 자료 구조가 무엇?\n<ul>\n<li>내부 구조에서 tree를 사용하는 STL container에 대해 설명</li>\n</ul>\n</li>\n<li>공간 복잡도 O(1)로 하나의 숫자를 search할 확률</li>\n<li>Linked List 구현 (insertion, deletion, traversing)</li>\n<li>Stack 구현</li>\n<li>Queue를 Stack으로 변환하는 방법</li>\n<li>Queue를 사용해서 Stack을 구현하는 방법</li>\n<li><strong>Linked List에서 Loop를 감지하고 제거하는 방법</strong>\n<ul>\n<li>Linked List에서 교차점을 찾는 방법</li>\n</ul>\n</li>\n<li>Linked List에서 중간 요소 찾는 방법</li>\n<li>단 한 번의 traversal만을 사용하여 Linked List에서 끝에서부터 n번째 노드 찾기</li>\n<li>Single Pointer를 사용하여 Linked List에서 노드를 삭제하는 방법</li>\n<li>Linked List에서 동일한 메모리 위치에 다음 주소와 이전 주소를 모두 저장하는 방법 (XOR Linked List)</li>\n<li>Binary Tree의 대각선 합 코딩</li>\n<li>Tree Traversal의 모든 유형</li>\n<li>row-wise와 column-wise로 정렬된 행렬에서 검색하는 방법</li>\n<li><strong>Reverse Doubly Linke List</strong></li>\n<li>Reverse Linked List</li>\n<li>Infix(중위 표기법) 방법: Tree에서 In-Order</li>\n<li>Heap의 내부 작업</li>\n<li><a href=\"https://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/\">https://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/</a></li>\n<li>HashMap, HashSet, Hast-Bucket 구현</li>\n<li>temp 변수 없이 int a와 b를 reverse하는 방법</li>\n<li>피보나치 수열을 생성하는 모든 방법</li>\n<li>Longest Palindromic Substring(가장 긴 회문 부분 문자열)</li>\n<li>Longest Bitonic Subsequece(가장 긴 bItonic 부분 시퀀스) 코딩</li>\n<li><strong>배열에서 3번째로 큰 수 찾기</strong></li>\n<li>0-1 sorting하는 모든 방법</li>\n<li>IP 주소를 유효성을 확인하는 python 프로그램 코딩</li>\n<li>Array에서 첫 번째 최대값과 두 번째 최대값을 찾는 코딩</li>\n<li>특정 알고리즘의 Complexity 분석</li>\n<li>Sorting 알고리즘의 유형</li>\n<li>2개의 정렬된 array을 교집합/합집합</li>\n<li>backspace 문자 처리 후 두 문자 비교</li>\n<li>이진수와 정수 N이 주어질 때, if-else 문 없이 bitwise AND와 OR만을 사용해서 N번째 비트를 뒤집는 함수 작성</li>\n<li>정수에서 2진수 bit의 수를 세는 코드</li>\n<li>숫자의 마지막 bit 반환</li>\n<li>숫자가 주어지면 m 위치에서 n 위치로 비트를 추출하여 10진수로 변환</li>\n<li><strong>Array에서 중복을 찾을 수 있는 최적화된 코드 (QuickSort)</strong></li>\n</ul>\n</li>\n<li><strong>Coding</strong>\n<ul>\n<li>SQL query</li>\n<li>Dynamic Casting</li>\n<li>선호하는 언어는 무엇인가?</li>\n<li>Interpreter와 Compiler의 차이점은 무엇인가?</li>\n<li>Java에서 Polymorphism(다형성)의 유형</li>\n<li>Java에서 HashMap과 TreeMap</li>\n<li>C++의 STL 구현에서는 어떤 데이터 구조가 사용되는가?</li>\n<li>C 언어에서 메모리 관리 방법</li>\n<li>C 언어에서 pointer와 double pointer</li>\n<li>C 언어에서 calloc과 malloc의 차이</li>\n<li><strong>C 언어에서 volatile 키워드</strong></li>\n<li><strong>C 언어에서 Pointer와 관련된 질문들</strong></li>\n<li>C 언어에서 Static 변수 vs Global 변수, Static Global qustn</li>\n<li>C 언어에서 2진수 to 16진수</li>\n<li>C 언어에서 Register 변수</li>\n<li>bit 관련 문제: Swap bit, Set bit</li>\n</ul>\n</li>\n<li><strong>Puzzle</strong>\n<ul>\n<li><a href=\"https://www.geeksforgeeks.org/puzzle-7-find-the-jar-with-contaminated-pills/\">Find the Jar with contaminated pills</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/puzzle-1-how-to-measure-45-minutes-using-two-identical-wires/\">How to Measure 45 minutes using two identical wires?</a></li>\n<li>시침과 분침이 서로 교차하는 횟수는?</li>\n</ul>\n</li>\n<li>Cisco\n<ul>\n<li>Cisco의 경쟁업체가 누구인가?</li>\n<li>Cisco와 관련된 2가지 affair(사건)</li>\n<li>Cisco가 내 Career에 필요한 이유?</li>\n<li>Cisco의 일원이 되고 싶은 이유?</li>\n<li>Cisco에서 나의 직무가 무엇인가?</li>\n<li>Cisco는 어떤 회사인가?</li>\n<li>Cisco의 제품은 무엇이 있는가?</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"interview-english\" style=\"position:relative;\"><a href=\"#interview-english\" aria-label=\"interview english permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interview English</h2>\n<p>영어로 인터뷰는 처음이라, 인터뷰 과정에서 사용할만한 영어 표현들을 연습했다.</p>\n<p>이외 중요하게 연습했던 것은 영어 발음과 인토네이션 교정이다.\n학교에서 진행하는 1:1 Zoom 회상 영어를 통해서 이 부분은 많이 교정 받았다.</p>\n<p>인터뷰 도중 다양한 상황에서 쓰일 수 있는 다양한 표현들을 다음에 정리해둔다.</p>\n<ul>\n<li>\n<p>What should I say when I miss a question?</p>\n<ul>\n<li>Unfortunately, I’ve not come across this ‘phrase’ before in my study, so I don’t feel confident giving a good answer. I would like to look into it further to help me develop myself later on.</li>\n<li>I don’t know but I’d like to find out.</li>\n</ul>\n</li>\n<li>\n<p>If there is an internet connection problem</p>\n<ul>\n<li>I’m sorry our connection is not great, could you please repeat the question?</li>\n</ul>\n</li>\n<li>\n<p>What should I say when I need time to think?</p>\n<ul>\n<li>Oh, that’s an interesting/great/good question. Could you give me some more time to give you a good answer? Oh, let me think about that.</li>\n</ul>\n</li>\n<li>\n<p>What pillars sound natural for reacting to the questions/words?</p>\n<ul>\n<li>Alright!</li>\n<li>Yeah!</li>\n<li>Let me think about it. Umm..</li>\n</ul>\n</li>\n<li>\n<p>Great for the panel</p>\n<ul>\n<li>Hello! So lovely to be speaking with you today. Thank you for taking the time to interview me. This is a great opportunity.</li>\n</ul>\n</li>\n<li>\n<p>End of interview.</p>\n<ul>\n<li>Once again, I’d like to thank you for interviewing me. I hope I answered all your questions well. I look forward to hearing from you soon.</li>\n</ul>\n</li>\n</ul>\n<script src=\"https://utteranc.es/client.js\"\n        repo=\"sominsong/sominsong.github.io\"\n        issue-term=\"pathname\"\n        label=\"Comment\"\n        theme=\"github-light\"\n        crossorigin=\"anonymous\"\n        async>\n</script>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#cisco-internship-interview-reference\">Cisco Internship Interview Reference</a></li>\n<li><a href=\"#online-coding-round\">Online Coding Round</a></li>\n<li><a href=\"#technical-interview\">Technical Interview</a></li>\n<li><a href=\"#interview-english\">Interview English</a></li>\n</ul>\n</div>","excerpt":"좋은 기회로 Cisco Research 본사에서 Intership Program Offer를 받았다. Resume는 제공한 상태이지만, 앞으로의 프로세스에서 어떻게 인터뷰가 진행될지 자세한 안내가 없었기 때문에 남은 기간동안 무엇을 준비해야 하는지 굉장히 막막했다.\n특히, 외국계 기업인데다가 Research이며, Intership Program이기 때문에 어떻게 인터뷰 과정이 진행되는지 대체 감이 오질 않았다. 따라서 구글링을 통해 Cisco Interview를 준비하면서 참고하면 좋을만한 것들을 정리해두기로 했다. 참고로 Offer를 주신 분께서는 Coding Test와 1 시간 가량의 Interview 프로세스가 있을 것이라고 안내해주셨다. Cisco 채용 페이지에서 Security 관련 Internship Program을 찾아보니 다음 포지션이 제일 관련도가 높아 보였다: Security Research Engineer (Intern) United States Cisco In…","frontmatter":{"date":"November 01, 2022","title":"Cisco Research Interview - Intership Program","categories":"Interview","author":"Mini","emoji":"💼"},"fields":{"slug":"/Interview/CISCO-interview-preparation/"}},"next":{"id":"a9977189-a1ed-5373-ba31-2ff2dafcbe8a","html":"<p>네트워킹 외부에서 BPF VM을 사용한 첫 번째 사례는 <code class=\"language-text\">seccomp()</code> 시스템콜에 대한 액세스 제어 정책을 구현하는 것이었다.</p>","frontmatter":{"date":"November 01, 2022","title":"TIL - Seccomp-BPF","categories":"TIL Linux","author":"Mini","emoji":"📖"},"fields":{"slug":"/TIL/Seccomp-BPF/"}},"prev":{"id":"20a049a8-b679-5821-bcab-18100a313358","html":"<h2 id=\"greedy-algorithm\" style=\"position:relative;\"><a href=\"#greedy-algorithm\" aria-label=\"greedy algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Greedy Algorithm</h2>\n<ul>\n<li>\n<p><strong>현재 상황에서 지금 당장 좋은 것만 고르는 방법</strong></p>\n</li>\n<li>\n<p>일반적으로 문제를 풀기 위한 최소한의 아이디어를 떠올릴 수 있는 능력 요구</p>\n</li>\n<li>\n<p>Greedy Solution은 정당성이 중요 = 단순히 현재 상황에서 가장 좋은 것을 반복적으로 선택하는 것만으로도 최적의 해를 구할 수 있는지? 보장해야 함</p>\n</li>\n<li>\n<p>일반적인 상황에서 그리디 알고리즘은 최적의 해를 보장할 수 없을 때가 많다.</p>\n<ul>\n<li>하지만, 코테의 경우는 출제자가 그리디로 얻은 해가 최적의 해가 되는 특수한 상황을 제시하기 때문에 예외다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"예시-문제-거스름돈-문제\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-%EB%AC%B8%EC%A0%9C-%EA%B1%B0%EC%8A%A4%EB%A6%84%EB%8F%88-%EB%AC%B8%EC%A0%9C\" aria-label=\"예시 문제 거스름돈 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시 문제: 거스름돈 문제</h3>\n<ul>\n<li>\n<p>정당성 분석: 가장 큰 화폐 단위부터 돈을 거슬러 주는 것이 최적의 해를 보장하는 이유는?</p>\n<ul>\n<li>가지고 있는 동전 중에서 ”<em>큰 단위가 항상 작은 단위의 배수이므로 작은 단위의 동전들을 종합해 다른 해가 나올 수 없기 때문</em>”</li>\n<li>만약 800원을 거슬러주어야 하는데 화폐 단위가 500원, 400원, 100원일 경우는 해당하지 않음</li>\n</ul>\n</li>\n<li>\n<p>답안 예시</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token number\">1260</span> <span class=\"token comment\"># 총 거슬러줘야 할 금액</span>\ncount <span class=\"token operator\">=</span> <span class=\"token number\">0</span> \narray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 거스름돈</span>\n\n<span class=\"token keyword\">for</span> coin <span class=\"token keyword\">in</span> array<span class=\"token punctuation\">:</span>\n    count <span class=\"token operator\">+=</span> n <span class=\"token operator\">//</span> coin <span class=\"token comment\"># 나누기 후 몫 = 동전 개수</span>\n    n <span class=\"token operator\">%=</span> coin\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>시간 복잡도 분석</p>\n<ul>\n<li>금액 자체와는 무관, 거스름돈의 종류에만 영향을 받음</li>\n<li>거스름돈 종류가 K개 일 때, O(K)</li>\n</ul>\n</li>\n<li>\n<p>구현(Implementation) 문제: 풀이는 떠올리기 쉽지만 소스코드로 구현하기 어려운 문제들</p>\n<ul>\n<li>실수 연산, 특정 소수점 자리까지 출력</li>\n<li>적절한 라이브러리 사용 (e.g., 순열과 조합)</li>\n</ul>\n</li>\n<li>\n<p>구현 문제: 시물레이션 및 완전 탐색 문제</p>\n<ul>\n<li>\n<p>2차원 공간에서의 방향 벡터 자주 활용:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 동, 북, 서, 남</span>\ndx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\ndy <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\nx<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token comment\"># 현재 위치</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 다음 위치</span>\n    nx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dx<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    ny <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> dy<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>nx<span class=\"token punctuation\">,</span> ny<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"예시-문제-상하좌우-문제\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-%EB%AC%B8%EC%A0%9C-%EC%83%81%ED%95%98%EC%A2%8C%EC%9A%B0-%EB%AC%B8%EC%A0%9C\" aria-label=\"예시 문제 상하좌우 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시 문제: 상하좌우 문제</h3>\n<ul>\n<li>답안 예시</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 동(R), 서(L), 남(D), 북(U)</span>\ndx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\ndy <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\ndirect <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"L\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"U\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n\nx<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 현재 위치</span>\n\n<span class=\"token keyword\">for</span> d <span class=\"token keyword\">in</span> plan<span class=\"token punctuation\">:</span>\n    nx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dx<span class=\"token punctuation\">[</span>direct<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n    ny <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> dy<span class=\"token punctuation\">[</span>direct<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> nx <span class=\"token operator\">></span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">or</span> ny <span class=\"token operator\">></span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">or</span> nx <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span> <span class=\"token keyword\">or</span> ny <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> nx<span class=\"token punctuation\">,</span> ny\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li><a href=\"http://www.yes24.com/Product/Goods/91433923\">나동빈. (2021). 이것이 취업을 위한 코딩 테스트다</a></li>\n</ul>\n<script src=\"https://utteranc.es/client.js\"\n        repo=\"sominsong/sominsong.github.io\"\n        issue-term=\"pathname\"\n        label=\"Comment\"\n        theme=\"github-light\"\n        crossorigin=\"anonymous\"\n        async>\n</script>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#greedy-algorithm\">Greedy Algorithm</a></p>\n<ul>\n<li><a href=\"#%EC%98%88%EC%8B%9C-%EB%AC%B8%EC%A0%9C-%EA%B1%B0%EC%8A%A4%EB%A6%84%EB%8F%88-%EB%AC%B8%EC%A0%9C\">예시 문제: 거스름돈 문제</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C-%EB%AC%B8%EC%A0%9C-%EC%83%81%ED%95%98%EC%A2%8C%EC%9A%B0-%EB%AC%B8%EC%A0%9C\">예시 문제: 상하좌우 문제</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#reference\">Reference</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"November 02, 2022","title":"Greedy 알고리즘 정리","categories":"Algorithm","author":"Mini","emoji":"🧩"},"fields":{"slug":"/Algorithm/Greedy/"}},"site":{"siteMetadata":{"siteUrl":"https://sominsong.github.io","comments":{"utterances":{"repo":"sominsong/sominsong.github.io"}}}}},"pageContext":{"slug":"/Interview/CISCO-interview-preparation/","nextSlug":"/TIL/Seccomp-BPF/","prevSlug":"/Algorithm/Greedy/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}